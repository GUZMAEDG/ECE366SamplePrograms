ECE366 Fall 2018 mini MIPS disassembler
----------
ADDRESS   :  BINARY  
0x00000000:  0010 0000 0000 1000 1111 1111 1111 0001
Instruction: addi $8,$0,-15
next_PC = 0x00000004

0x00000004:  0000 0000 0000 1000 0100 1000 0010 0010
Instruction: sub $9,$0,$8
next_PC = 0x00000008

0x00000008:  0000 0001 0010 1000 0110 0000 0010 0110
Instruction: xor $12,$9,$8
next_PC = 0x0000000c

0x0000000c:  0010 0001 0010 1001 1111 1111 1111 1110
Instruction: addi $9,$9,-2
next_PC = 0x00000010

0x00000010:  0000 0001 0010 0000 0101 0000 0010 1010
Instruction: slt $10,$9,$0
next_PC = 0x00000014

0x00000014:  0001 0101 0100 0000 0000 0000 0000 0001
Instruction: bne $10,$0,1
If $10 != $0, then next_PC = 0x0000001c
Else next_PC = 0x 00000018

0x00000018:  0001 0011 0011 1001 1111 1111 1111 1100
Instruction: beq $25,$25,-4
If $25 == $25, then next_PC = 0x0000000c
Else next_PC = 0x 0000001c

0x0000001c:  0001 0001 0010 0000 0000 0000 0000 0010
Instruction: beq $9,$0,2
If $9 == $0, then next_PC = 0x00000028
Else next_PC = 0x 00000020

0x00000020:  0010 0000 0000 1011 1111 1111 1111 1111
Instruction: addi $11,$0,-1
next_PC = 0x00000024

0x00000024:  0000 1000 0000 0000 0000 0000 0000 1101
Instruction: j 13
next_PC = 0x00000034

0x00000028:  0000 0000 0000 0000 0101 1000 0010 0000
Instruction: add $11,$0,$0
next_PC = 0x0000002c

0x0000002c:  0000 1000 0000 0000 0000 0000 0000 1101
Instruction: j 13
next_PC = 0x00000034

0x00000030:  0000 0000 0000 1100 0101 1000 0010 0000
Instruction: add $11,$0,$12
next_PC = 0x00000034

0x00000034:  0000 1000 0000 0000 0000 0000 0000 1101
Instruction: j 13
next_PC = 0x00000034

>>> 
